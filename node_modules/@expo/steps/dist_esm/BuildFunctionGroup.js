import { BuildConfigError } from './errors.js';
export class BuildFunctionGroup {
    constructor({ namespace, id, createBuildStepsFromFunctionGroupCall, }) {
        this.namespace = namespace;
        this.id = id;
        this.createBuildStepsFromFunctionGroupCall = createBuildStepsFromFunctionGroupCall;
    }
    getFullId() {
        return this.namespace === undefined ? this.id : `${this.namespace}/${this.id}`;
    }
}
export function createBuildFunctionGroupByIdMapping(buildFunctionGroups) {
    const buildFunctionGroupById = {};
    for (const buildFunctionGroup of buildFunctionGroups) {
        if (buildFunctionGroupById[buildFunctionGroup.getFullId()] !== undefined) {
            throw new BuildConfigError(`Build function group with id ${buildFunctionGroup.getFullId()} is already defined.`);
        }
        buildFunctionGroupById[buildFunctionGroup.getFullId()] = buildFunctionGroup;
    }
    return buildFunctionGroupById;
}
//# sourceMappingURL=BuildFunctionGroup.js.map